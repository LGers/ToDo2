{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/Footer.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","marginLeft","textAlign","fontSize","Tasks","tasks","map","t","AddTask","onAddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Footer","href","About","to","tasksState","App","baseURL","setTasks","showAddTask","setShowAddTask","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","response","json","data","console","log","fetchTaskUpdate","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updatedTask","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"mOAEMA,EAAS,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,QAC1B,OACI,wBAAQA,QAASA,EAASC,MAAO,CAACC,gBAAgBJ,GAAQK,UAAU,MAApE,SAA2EJ,KAGnFF,EAAOO,aAAa,CAChBN,MAAO,QACPC,KAAK,aASMF,QCdTQ,EAAS,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,MAAMC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,QACpBC,EAAWC,cACjB,OACI,yBAAQP,UAAU,SAAlB,UACI,6BAAKG,IACkB,MAAtBG,EAASE,UACN,cAAC,EAAD,CACIb,MAAOU,EAAU,MAAQ,YAAaT,KAAMS,EAAU,QAAU,MAChER,QAASO,QAO7BF,EAAOD,aAAe,CAClBE,MAAO,oBAQID,Q,QCVAO,EAhBF,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,SAE3B,OACI,sBAAKZ,UAAS,eAAUU,EAAKG,SAAW,WAAa,IAAMC,cAAe,kBAAMF,EAASF,EAAKK,KAA9F,UACI,+BAAKL,EAAKd,KACN,cAAC,IAAD,CACIE,MAAO,CAACH,MAAO,MAAOqB,OAAQ,WAC9BnB,QAAS,kBAAMc,EAASD,EAAKK,UAIrC,8BAAIL,EAAKO,IAAT,IAAc,uBAAMnB,MAAO,CAACoB,WAAW,QAASC,UAAU,QAASC,SAAS,QAA9D,oBAA+EV,EAAKK,aCC/FM,EAZD,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,MAAOX,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,SAE7B,OACI,8BACKU,EAAMC,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,CAAiBd,KAAMc,EAAGb,SAAUA,EAAUC,SAAUA,GAA7CY,EAAET,UC4CdU,EAjDC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,UACf,EAAoBC,mBAAS,IAA7B,mBAAM/B,EAAN,KAAWgC,EAAX,KACA,EAAkBD,mBAAS,IAA3B,mBAAMV,EAAN,KAAUY,EAAV,KACA,EAA4BF,oBAAS,GAArC,mBAAMd,EAAN,KAAeiB,EAAf,KAgBA,OACI,uBAAM9B,UAAU,WAAW+B,SAhBhB,SAACC,GACZA,EAAEC,iBACGrC,EAIAqB,GAILS,EAAU,CAAC9B,OAAKqB,MAAIJ,aACpBe,EAAQ,IACRC,EAAO,IACPC,GAAY,IANRI,MAAM,2BAJNA,MAAM,sBAaV,UACI,sBAAKlC,UAAU,eAAf,UACI,yCACA,uBAAOmC,KAAK,OAAOC,YAAY,WACxBC,MAAOzC,EACP0C,SAAU,SAACN,GAAD,OAAKJ,EAAQI,EAAEO,OAAOF,aAG3C,sBAAKrC,UAAU,eAAf,UACI,+CACA,uBAAOmC,KAAK,OAAOC,YAAY,iBACxBC,MAAOpB,EACPqB,SAAU,SAACN,GAAD,OAAKH,EAAOG,EAAEO,OAAOF,aAG1C,sBAAKrC,UAAU,kCAAf,UACI,iDACA,uBAAOmC,KAAK,WACLK,QAAS3B,EACTwB,MAAOxB,EACPyB,SAAU,SAACN,GAAD,OAAKF,EAAYE,EAAES,cAAcD,eAItD,uBAAOL,KAAK,SAASE,MAAM,YAAYrC,UAAU,sBChC9C0C,EAZA,WAEX,OACI,mCACI,+FAGA,mBAAGC,KAAK,QAAR,uB,QCEGC,EARD,WACV,OACI,gCACI,+CACA,cAAC,IAAD,CAASC,GAAG,IAAZ,yBCENC,EAAa,GA8GJC,MA5Gf,WACI,IACMC,EAAQ,yDACd,EAA0BrB,mBAASmB,GAAnC,mBAAOxB,EAAP,KAAc2B,EAAd,KACA,EAAsCtB,oBAAS,GAA/C,mBAAOuB,EAAP,KAAoBC,EAApB,KAEAC,qBAAU,YACQ,uCAAG,4BAAAC,EAAA,sEACiBC,IADjB,OACPC,EADO,OAEbN,EAASM,GAFI,2CAAH,qDAKdC,KACD,IAGH,IAAMF,EAAU,uCAAG,8BAAAD,EAAA,sEACQI,MAAMT,GADd,cACTU,EADS,gBAEIA,EAASC,OAFb,cAETC,EAFS,OAGfC,QAAQC,IAAIF,GAHG,kBAIRA,GAJQ,2CAAH,qDAOVG,EAAe,uCAAG,WAAOhD,GAAP,iBAAAsC,EAAA,sEACGI,MAAM,GAAD,OAAIT,EAAJ,YAAejC,IADvB,cACd2C,EADc,gBAEDA,EAASC,OAFR,cAEdC,EAFc,OAGpBC,QAAQC,IAAIF,GAHQ,kBAIbA,GAJa,2CAAH,sDAQfI,EAAO,uCAAG,WAAOtD,GAAP,iBAAA2C,EAAA,sEACWI,MAAMT,EACzB,CACIiB,OAAQ,OACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU3D,KALjB,cACNgD,EADM,gBAOOA,EAASC,OAPhB,OAONC,EAPM,OAQZX,EAAS,GAAD,mBAAK3B,GAAL,CAAYsC,KARR,2CAAH,sDAqBPU,EAAU,uCAAG,WAAOvD,GAAP,SAAAsC,EAAA,sEACTI,MAAM,GAAD,OAAIT,EAAJ,YAAejC,GACtB,CAACkD,OAAQ,WAFE,OAIfhB,EAAS3B,EAAMiD,QAAO,SAAC7D,GAAD,OAAUA,EAAKK,KAAOA,MAJ7B,2CAAH,sDAQVyD,EAAc,uCAAG,WAAOzD,GAAP,qBAAAsC,EAAA,sEACQU,EAAgBhD,GADxB,cACb0D,EADa,OAEbC,EAFa,2BAEKD,GAFL,IAEmB5D,UAAW4D,EAAa5D,WAF3C,SAGI4C,MAAM,GAAD,OAAIT,EAAJ,YAAejC,GACvC,CACIkD,OAAQ,MACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAUK,KAPV,cAGbhB,EAHa,gBASAA,EAASC,OATT,OASbC,EATa,OAWnBX,EAAS3B,EAAMC,KAAI,SAACC,GAAD,OAAOA,EAAET,KAAOA,EAAT,2BAChBS,GADgB,IACbX,SAAU+C,EAAK/C,WACtBW,MAba,4CAAH,sDAiBpB,OAEI,aADA,CACC,IAAD,UACI,sBAAKxB,UAAU,YAAf,UAEI,cAAC,EAAD,CAAQG,MAAM,YACNC,MAAO,kBAAM+C,GAAgBD,IAC7B7C,QAAS6C,IAGjB,cAAC,IAAD,CAAOyB,KAAO,IAAIC,OAAK,EAACC,OAAQ,SAACC,GAAD,OAC5B,qCACK5B,GAAe,cAAC,EAAD,CAASxB,UAAWsC,IACnC1C,EAAMyD,OAAS,EACV,cAAE,EAAF,CAAQzD,MAAOA,EACPX,SAAU2D,EACV1D,SAAU4D,IAElB,wDAId,cAAC,IAAD,CAAOG,KAAO,SAASK,UAAWpC,IAClC,cAAC,EAAD,UCnGDqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASb,OACP,cAAC,IAAMc,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BZ,M","file":"static/js/main.01ec0d76.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({color, text, onClick}) => {\r\n    return (\r\n        <button onClick={onClick} style={{backgroundColor:color}} className='btn'>{text}</button>\r\n    )\r\n}\r\nButton.defaultProps={\r\n    color: 'black',\r\n    text:'Use props'\r\n}\r\n\r\nButton.propTypes = {\r\n    color: PropTypes.string,\r\n    text: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button","import PropTypes from 'prop-types'\r\nimport {useLocation} from 'react-router-dom'\r\nimport './../index.css';\r\nimport Button from \"./Button\";\r\nconst Header = ({title,onAdd, showAdd}) => {\r\n    const location = useLocation()\r\n    return (\r\n        <header className='header'>\r\n            <h1>{title}</h1>\r\n            {location.pathname === '/' && (\r\n                <Button\r\n                    color={showAdd ? 'red' : 'steelblue'} text={showAdd ? 'CLose' : 'Add'}\r\n                    onClick={onAdd}\r\n                />\r\n            )\r\n            }\r\n        </header>\r\n    )\r\n}\r\nHeader.defaultProps = {\r\n    title: 'ToDoList Default'\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string\r\n}\r\n\r\n\r\nexport default Header","import {FaTimes} from 'react-icons/fa'\r\n\r\nconst Task = ({task, onDelete, onToggle}) => {\r\n\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\r\n            <h3>{task.text}\r\n                <FaTimes\r\n                    style={{color: 'red', cursor: 'pointer'}}\r\n                    onClick={() => onDelete(task.id)}\r\n\r\n                />\r\n            </h3>\r\n            <p>{task.day} <span style={{marginLeft:'100px', textAlign:'right', fontSize:'12px'}}>___id: {task.id}</span></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task","import Task from \"./Task\";\r\n\r\nconst Tasks = ({tasks, onDelete, onToggle}) => {\r\n\r\n    return (\r\n        <div>\r\n            {tasks.map((t) => (\r\n                <Task key={t.id} task={t} onDelete={onDelete} onToggle={onToggle}/>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Tasks","import {useState} from \"react\";\r\n\r\nconst AddTask = ( {onAddTask}) => {\r\n    const[text,setText]=useState('')\r\n    const[day,setDay]=useState('')\r\n    const[reminder,setReminder]=useState(false)\r\n    const onSubmit=(e)=>{\r\n        e.preventDefault()\r\n        if (!text) {\r\n            alert('Please add a Task')\r\n            return\r\n        }\r\n        if (!day) {\r\n            alert('Please add a Day & Time')\r\n            return\r\n        }\r\n        onAddTask({text,day,reminder})\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input type=\"text\" placeholder='Add Task'\r\n                       value={text}\r\n                       onChange={(e)=>setText(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Day & Time</label>\r\n                <input type=\"text\" placeholder='Add Day & Time'\r\n                       value={day}\r\n                       onChange={(e)=>setDay(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input type=\"checkbox\"\r\n                       checked={reminder}//{reminder?true:false}\r\n                       value={reminder}\r\n                       onChange={(e)=>setReminder(e.currentTarget.checked)}\r\n\r\n                />\r\n            </div>\r\n            <input type=\"submit\" value='Save Task' className='btn btn-block'/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask","import {FaTimes} from 'react-icons/fa'\r\n\r\nconst Footer = () => {\r\n\r\n    return (\r\n        <footer>\r\n            <p>\r\n                Copyright MV Studio https://mvstudio.by & LGers & LM &copy; 2021\r\n            </p>\r\n            <a href=\"About\">About</a>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","\r\n// import {link} from 'react-router-dom'\r\nimport {NavLink} from 'react-router-dom'\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h4>Version 1.0.0</h4>\r\n            <NavLink to=\"/\">Go Back</NavLink>\r\n        </div>\r\n    )\r\n}\r\nexport default About","//Original lesson in: https://github.com/bradtraversy/react-crash-2021\nimport {useState, useEffect} from \"react\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\nimport Footer from \"./components/Footer\";\nimport{BrowserRouter as Router, Route, HashRouter} from \"react-router-dom\";\nimport About from \"./components/About\";\n\nconst tasksState = []\n\nfunction App() {\n    const _baseURL='http://localhost:5000/tasksState'\n    const baseURL='https://611929468ed292001799eea4.mockapi.io/tasksState'\n    const [tasks, setTasks] = useState(tasksState)\n    const [showAddTask, setShowAddTask] = useState(false)\n\n    useEffect(() => {\n        const getTasks = async () => {\n            const tasksFromServer = await fetchTasks()\n            setTasks(tasksFromServer)\n        }\n\n        getTasks()\n    }, [])\n\n    //Fetch tasks\n    const fetchTasks = async () => {\n        const response = await fetch(baseURL)\n        const data = await response.json()\n        console.log(data)\n        return data\n    }\n    //Fetch task\n    const fetchTaskUpdate = async (id) => {\n        const response = await fetch(`${baseURL}/${id}`)\n        const data = await response.json()\n        console.log(data)\n        return data\n    }\n\n    //Add Task function\n    const addTask = async (task) => {\n        const response = await fetch(baseURL,\n            {\n                method: 'POST',\n                headers: {'Content-type': 'application/json'},\n                body: JSON.stringify(task)\n            })\n        const data = await response.json()\n        setTasks([...tasks, data])\n\n        /*const id = Math.floor(Math.random() * 10000) + 1\n        const newTask = {id, ...task}\n        setTasks([...tasks, newTask])\n         */\n    }\n\n    //Delete TASK from local State function\n    const _deleteTask = (id) => {\n        setTasks(tasks.filter((task) => task.id !== id))\n    }\n    //Delete TASK from jsonServer\n    const deleteTask = async (id) => {\n        await fetch(`${baseURL}/${id}`,\n            {method: 'DELETE'}\n        )\n        setTasks(tasks.filter((task) => task.id !== id))\n    }\n\n    //Toggle reminder\n    const toggleReminder = async (id) => {\n        const taskToToggle = await fetchTaskUpdate(id)\n        const updatedTask = {...taskToToggle, reminder: !taskToToggle.reminder}\n        const response = await fetch(`${baseURL}/${id}`,\n            {\n                method: 'PUT',\n                headers: {'Content-type': 'application/json'},\n                body: JSON.stringify(updatedTask)\n            })\n        const data = await response.json()\n\n        setTasks(tasks.map((t) => t.id === id\n            ? {...t, reminder: data.reminder}\n            : t\n        ))\n    }\n\n    return (\n        // <Router basename={process.env.PUBLIC_URL}>\n        <HashRouter>\n            <div className=\"container\">\n\n                <Header title='ToDo List'\n                        onAdd={() => setShowAddTask(!showAddTask)}\n                        showAdd={showAddTask}\n                />\n\n                <Route path = '/' exact render={(props)=>(\n                    <>\n                        {showAddTask && <AddTask onAddTask={addTask}/>}\n                        {tasks.length > 0\n                            ? < Tasks tasks={tasks}\n                                      onDelete={deleteTask}\n                                      onToggle={toggleReminder}\n                            />\n                            : <h3>No Tasks to show</h3>\n                        }\n                    </>\n                )}/>\n                <Route path = '/about' component={About}/>\n                <Footer/>\n            </div>\n\n        </HashRouter>\n        //</Router> use Router for hosting\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","//Original lesson in: https://github.com/bradtraversy/react-crash-2021\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}